# ~/.tmux.conf
# for ansible test on gns3
# to reload config 
# :source-file ~/.tmux.conf or from shell $ tmux source-file ~/.tmux.conf

set -g history-limit 10000
# change on vi mode
set -g status-keys vi
setw -g mode-keys vi


# easily toggle synchronization (mnemonic: e is for echo)
bind e setw synchronize-panes
#bind E setw synchronize-panes off

# ********* copy-paste******* to X buffer, can't work on putty
# move x clipboard into tmux paste buffer
#bind-key p save-buffer ~/.tmux-buffer \; run-shell "xsel -i -b <~/.tmux-buffer && rm ~/.tmux-buffer"
#bind C-p run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer"
# move tmux copy buffer into x clipboard
#bind C-y run "tmux save-buffer - | xclip -i"

# copy tmux buffer to file
#bind-key b save-buffer ~/tmux.buffer
# or saveb command bind-key b save-buffer ##
#bind-key b command-prompt -p 'save buffer to filename:' -I '' 'save-buffer %1' 
#bind-key C-c command-prompt -I '' 'save-buffer %1'
bind-key C-c command-prompt -p "file name" 'save-buffer %%'
#*******************************

# http://blog.hawkhost.com/2010/07/02/tmux-%E2%80%93-the-terminal-multiplexer-part-2/
# Set status bar
#set -g status-bg black
#set -g status-fg white
#set -g status-left #[fg=red]#H
# Highlight active window
set-window-option -g window-status-current-bg red
# Automatically set window title
setw -g automatic-rename
set-option -g set-titles-string '#H:#S.#I.#P #W #T' # window number,program name, active(or not)
#set -g set-titles on
#set -g set-titles-string "#T"

# last active window
bind-key C-b last-window

# **************** mouse mode *****************
# set-window-option -g mode-mouse on
# select pane by mouse
#set-option -g mouse-select-pane on
# select window
#mouse-select-window
#**********************************************

# Pipe pane to log file
bind-key h pipe-pane 'cat >>$HOME/tmux-#W.log' \; display-message 'Started logging to $HOME/tmux-#W.log'
bind-key H pipe-pane \; display-message 'Ended logging to $HOME/tmux-#W.log'
#bind-key H pipe-pane "exec cat >>$HOME/'#W-tmux.log'" \; display-message 'Started logging to $HOME/#W-tmux.log'
#bind-key h pipe-pane \; display-message 'Ended logging to $HOME/#W-tmux.log'

# repeat button for previous and next window 
bind-key -r n next-window
bind-key -r p previous-window

# monitor
bind _ command-prompt -p "monitor-silence (seconds)" "setw monitor-silence %%"
bind M setw monitor-activity
bind m command-prompt -p "string monitor:" "monitor-content %%"

# Zooming
bind z resize-pane -Z

# ************** location specific ********************
new  -s GNS3 -n R1 'telnet 127.0.0.1 2101'
neww -n R2 'telnet 127.0.0.1 2102'
# don't closing after  command exits
neww -n ansible
send-keys -t ansible.0 'cd /vagrant/play && source ../ansible/hacking/env-setup' Enter
#selectw -t 2 
# select plane
#selectp -t 0
#*****************************************************


